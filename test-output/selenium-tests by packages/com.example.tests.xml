<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Anatoly-Korzuns-MacBook-Pro.local" name="com.example.tests" tests="12" failures="1" timestamp="2 Aug 2012 10:51:45 GMT" time="173.585" errors="0">
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.example.tests.Step1">
    <failure type="com.thoughtworks.selenium.SeleniumException" message="ERROR: There was an unexpected Alert! [An HTTP error 0 occurred.  /ajax/result-numbers]">
      <![CDATA[com.thoughtworks.selenium.SeleniumException: ERROR: There was an unexpected Alert! [An HTTP error 0 occurred.  /ajax/result-numbers]
	at com.thoughtworks.selenium.HttpCommandProcessor.throwAssertionFailureExceptionOrError(HttpCommandProcessor.java:112)
	at com.thoughtworks.selenium.HttpCommandProcessor.doCommand(HttpCommandProcessor.java:106)
	at com.unitedinternet.portal.selenium.utils.logging.LoggingCommandProcessor.doCommand(LoggingCommandProcessor.java:141)
	at com.thoughtworks.selenium.DefaultSelenium.close(DefaultSelenium.java:427)
	at com.example.tests.SeleniumHelper.dismissSelenium(SeleniumHelper.java:76)
	at com.example.tests.TestBase.tearDown(TestBase.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:796)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:907)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1237)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:51)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:85)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1197)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1122)
	at org.testng.TestNG.run(TestNG.java:1030)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.example.tests.Step2">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.example.tests.Step2">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.example.tests.Step2">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.example.tests.Step2">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="testStep1" time="21.485" classname="com.example.tests.Step1"/>
  <testcase name="testStep1" time="15.755" classname="com.example.tests.Step1">
    <failure type="com.thoughtworks.selenium.SeleniumException" message="ERROR: Element css=div.content_body_header not found">
      <![CDATA[com.thoughtworks.selenium.SeleniumException: ERROR: Element css=div.content_body_header not found
	at com.thoughtworks.selenium.HttpCommandProcessor.throwAssertionFailureExceptionOrError(HttpCommandProcessor.java:112)
	at com.thoughtworks.selenium.HttpCommandProcessor.doCommand(HttpCommandProcessor.java:106)
	at com.thoughtworks.selenium.HttpCommandProcessor.getString(HttpCommandProcessor.java:275)
	at com.unitedinternet.portal.selenium.utils.logging.LoggingCommandProcessor.getString(LoggingCommandProcessor.java:238)
	at com.thoughtworks.selenium.DefaultSelenium.getText(DefaultSelenium.java:471)
	at com.example.tests.Step1.testStep1(Step1.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:715)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:907)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1237)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:51)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:85)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1197)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1122)
	at org.testng.TestNG.run(TestNG.java:1030)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </failure>
  </testcase> <!-- testStep1 -->
  <testcase name="testStep1" time="17.099" classname="com.example.tests.Step1"/>
  <testcase name="testStep1" time="23.009" classname="com.example.tests.Step1"/>
  <testcase name="testStep1" time="38.143" classname="com.example.tests.Step1"/>
  <testcase name="testStep1" time="18.735" classname="com.example.tests.Step1"/>
  <testcase name="testStep1" time="12.481" classname="com.example.tests.Step1"/>
  <testcase name="testStep1Find" time="0.0010" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- testStep1Find -->
  <testcase name="testStep1Find" time="0.0010" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- testStep1Find -->
  <testcase name="testStep1Find" time="0.0" classname="com.example.tests.Step1">
    <skipped/>
  </testcase> <!-- testStep1Find -->
  <testcase name="testStep2" time="0.0010" classname="com.example.tests.Step2">
    <skipped/>
  </testcase> <!-- testStep2 -->
  <testcase name="testStep2" time="0.0010" classname="com.example.tests.Step2">
    <skipped/>
  </testcase> <!-- testStep2 -->
</testsuite> <!-- com.example.tests -->
